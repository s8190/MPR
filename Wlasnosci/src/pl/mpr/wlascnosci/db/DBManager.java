package pl.mpr.wlascnosci.db;

import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import pl.mpr.wlascnosci.base.Rzecz;
import pl.mpr.wlascnosci.base.Wlasciciel;

public class DBManager {

	private Connection con;
	private Statement stmt;
	private PreparedStatement pstmt;

	public DBManager() throws SQLException {
		con = DriverManager.getConnection(
				"jdbc:hsqldb:hsql://localhost/wlasnosci", "SA", "");

		stmt = con.createStatement();
		
		DatabaseMetaData dbMetaData = con.getMetaData();
		ResultSet rs = dbMetaData.getTables(null, null, "wlasciciele".toUpperCase(), null);
		
		if (rs.next() == false) {
			stmt
					.executeUpdate("CREATE TABLE wlasciciele (id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
							+ " imie VARCHAR(20), nazwisko VARCHAR(20),"
							+ " adres VARCHAR(30), email VARCHAR(30));");
		}

		dbMetaData = con.getMetaData();
		rs = dbMetaData.getTables(null, null, "rzeczy".toUpperCase(), null);
		
		if (rs.next() == false) {
			stmt
					.executeUpdate("CREATE TABLE rzeczy (id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
							+ " rzecz VARCHAR(20), nr_seryjny INT,"
							+ " stan BOOLEAN, id_wlasciciel INT);");
		}
		
	}

	public ArrayList<Wlasciciel> wczytaj() {
		
		ArrayList<Wlasciciel> wlasciciele = new ArrayList<Wlasciciel>();
		
		try {

			stmt = con.createStatement();
			ResultSet rsWlasciciel = stmt
					.executeQuery("SELECT id,imie,nazwisko,adres,email FROM wlasciciele;");

			while (rsWlasciciel.next()) {
				Wlasciciel w = new Wlasciciel(rsWlasciciel.getInt("id"), rsWlasciciel
						.getString("imie"), rsWlasciciel.getString("nazwisko"),
						rsWlasciciel.getString("adres"), rsWlasciciel
								.getString("email"));
				int id = rsWlasciciel.getInt("id");

				pstmt = con
						.prepareStatement("SELECT id,rzecz,nr_seryjny,stan FROM rzeczy WHERE id_wlasciciel=?;");
				pstmt.setInt(1, id);
				ResultSet rsRzecz = pstmt.executeQuery();

				while (rsRzecz.next()) {
					Rzecz r = new Rzecz(rsWlasciciel.getInt("id"), rsRzecz.getString("rzecz"),
							rsRzecz.getInt("nr_seryjny"), rsRzecz
									.getBoolean("stan"));
					w.addRzecz(r);
				}
				wlasciciele.add(w);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}

		return wlasciciele;

	}

	public void dodajWlasciciela(Wlasciciel w) {
		
		try {
			
			pstmt = con
					.prepareStatement("INSERT INTO wlasciciele (imie,nazwisko,adres,email) VALUES (?,?,?,?)");
			pstmt.setString(1, w.getImie());
			pstmt.setString(2, w.getNazwisko());
			pstmt.setString(3, w.getAdres());
			pstmt.setString(4, w.getEmail());
			pstmt.execute();

		} catch (SQLException e) {
			e.printStackTrace();
		}

	}

	public void usunWlasciciela(Wlasciciel w) {
		
		int id = -1;
		
		try {
			
			pstmt = con.prepareStatement("SELECT id FROM wlasciciele WHERE imie=? AND nazwisko=? AND adres=? AND email=?;");
			pstmt.setString(1, w.getImie());
			pstmt.setString(2, w.getNazwisko());
			pstmt.setString(3, w.getAdres());
			pstmt.setString(4, w.getEmail());
			ResultSet rs = pstmt.executeQuery();
			
			while (rs.next()) {
				id = rs.getInt("id");
			}
			
			pstmt = con.prepareStatement("DELETE FROM wlasciciele WHERE id=?;");
			pstmt.setInt(1, id);
			pstmt.execute();
			
			pstmt = con.prepareStatement("DELETE FROM rzeczy WHERE id_wlasciciel=?;");
			pstmt.setInt(1, id);
			pstmt.execute();
			
		} catch (SQLException e) {
			e.printStackTrace();
		}

	}

	public void dodajRzecz(Wlasciciel w, Rzecz r) {
		
		int id = -1;
		
		try {

			pstmt = con.prepareStatement("SELECT id FROM wlasciciele WHERE imie=? AND nazwisko=? AND adres=? AND email=?;");
			pstmt.setString(1, w.getImie());
			pstmt.setString(2, w.getNazwisko());
			pstmt.setString(3, w.getAdres());
			pstmt.setString(4, w.getEmail());
			ResultSet rs = pstmt.executeQuery();
			
			while (rs.next()) {
				id = rs.getInt("id");
			}
			
			pstmt = con
					.prepareStatement("INSERT INTO rzeczy (rzecz,nr_seryjny,stan,id_wlasciciel) VALUES (?,?,?,?)");
			pstmt.setString(1, r.getRzecz());
			pstmt.setInt(2, r.getNumer_seryjny());
			pstmt.setBoolean(3, r.getStan());
			pstmt.setInt(4, id);
			pstmt.execute();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		
	}

	public void usunRzecz(Rzecz r) {
		
		try {
			
		pstmt = con.prepareStatement("DELETE FROM rzeczy WHERE rzecz=? AND nr_seryjny=? AND stan=?;");
		pstmt.setString(1, r.getRzecz());
		pstmt.setInt(2, r.getNumer_seryjny());
		pstmt.setBoolean(3, r.getStan());
		pstmt.execute();
		
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
	}

	public void usunWszytsko() {
		
		try {
			
			stmt.execute("DELETE FROM wlasciciele;");
			stmt.execute("DELETE FROM rzeczy");
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
	}

} 
